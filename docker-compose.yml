services:
#  consumerapp:
#    image: consumerapp
#    build:
#      context: .
#      dockerfile: ConsumerApp/Dockerfile
#    networks:
#        - custom_network
#
#  producerapp:
#    image: producerapp
#    build:
#      context: .
#      dockerfile: ProducerApp/Dockerfile
#    networks:
#        - custom_network

  zookeeper:
    image: "confluentinc/cp-zookeeper:6.1.0"
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: Portugal
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - custom_network

  kafka:
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - custom_network
  init-kafka-container:
      image: "confluentinc/cp-enterprise-kafka:6.1.0"
      depends_on:
        - kafka
      entrypoint: [ '/bin/sh', '-c' ]
      command: |
        "
        # rather than giving sleep 15 use this 
        # to block init container to wait for Kafka broker to be ready  
        kafka-topics --bootstrap-server kafka:9092 --list
        
        # create init topics
        kafka-topics --create --partitions 3 --bootstrap-server kafka:9092 --topic presentation-topic
        "
      networks:
        - custom_network

networks:
  custom_network:
    driver: bridge